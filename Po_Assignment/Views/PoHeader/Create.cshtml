
@model Po_Assignment.Models.Po_header

@using Microsoft.AspNetCore.Mvc.ViewFeatures

@{
    ViewBag.Title = "Create";

}

<div class="card">
    <div class="card-body ">
        <h4 class="card-title mt-4">Purchase Order Entry</h4>

@using (Html.BeginForm("Save", "Poheader", FormMethod.Post, new { id = "poForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">


                <div class="form-group row ustify-content-between">
                    <div class=" col-sm-8">
                        <input type="submit" id="saveBtn" value="Save" class="btn btn-success" />
                        <button onclick="window.location.href='@Url.Action("Index", "Poheader")'" class="btn btn-danger">Cancel</button>
                    </div>
                </div>


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <label for="OrderNumber" class="control-label col-sm-4">Order No
                        <span style="color:red">*</span>
                    </label>
                    <div class="col-sm-4">
                        <input type="text" id="orderNumber" name="OrderNumber" class="form-control" value="@ViewBag.Code" readonly />
                    </div>
                   
                    &nbsp;
                    <label for="OrderDate" class="control-label col-sm-2 justify-content-xl-start">Order Date
                        <span style="color:red">*</span>
                    </label>
                    <div class="col-sm-4">
                        <input type="date" id="orderDate" name="orderDate" class="form-control">
                        <span asp-validation-for="OrderDate" class="text-danger"></span>
                    </div>
                </div>


                &nbsp;



        <div class="form-group">
            <label for="VendorMasterId" class="control-label col-md-2 mr-2">Vendor
                        <span style="color:red">*</span>
            </label>
            <div class="col-sm-11">
                @Html.DropDownListFor(model => model.VendorMasterId, (SelectList)ViewBag.VendorMaster, "Select Vendor", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VendorMasterId, "", new { @class = "text-danger" })
            </div>
        </div>

                &nbsp;

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-11">
                @Html.TextAreaFor(model => model.Notes, new { @class = "form-control", rows = "4" })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>
                &nbsp;

        <div class="form-group">
            <label for="OrderValue" class="control-label col-sm-4">Order Value </label>
            <div class="col-sm-4">
                <input type="text" id="orderValue" class="form-control" readonly />
            </div>
        </div>

        &nbsp;
        <div>
            @Html.Partial("PartialPoDetails", ViewData)
        </div>

    </div>
      
}

</<div>

</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>


<script>
    $(document).ready(function () {
        $.ajax({
            url: '@Url.Action("GetNextPONumber", "Poheader")',
            type: 'GET',
            success: function (data) {
                $('#orderNumber').val(data.nextPONumber);
            },
            error: function (xhr, status, error) {
                console.error(xhr.responseText);
            }
        });
    });
</script>

     


       
       
<script>
    
    $('#saveBtn').click(function (e) {
        e.preventDefault();

        
        var headerFormData = $('#poForm').serialize();

       
        var orderItems = [];
        $('tbody tr').each(function () {
            var material = $(this).find('td:eq(0)').text();
            var shortText = $(this).find('td:eq(1)').text();
            var quantity = $(this).find('td:eq(2)').text();
            var rate = $(this).find('td:eq(3)').text();
            var amount = $(this).find('td:eq(4)').text();
            var expectedDate = $(this).find('td:eq(5)').text();


            var orderItem = {
                MaterialID: material,
                ItemNotes: shortText,
                ItemQuantity: quantity,
                ItemRate: rate,
                ItemValue: amount,
                ExpectedDate: expectedDate
            };


            orderItems.push(orderItem);
        });

               
        var detailsJson = JSON.stringify(orderItems);

        debugger;
        $.ajax({
            url: '@Url.Action("Save", "Poheader")',
            type: 'POST',
            data: headerFormData + '&detailsJson=' + detailsJson,
            success: function (response) {

                console.log(response);
            },
            error: function (xhr, status, error) {
                      alert("Purchase order details cant be empty")
              
            }
        });
    });

            const addLineBtn = document.getElementById('addLineBtn');

            // Flag to track if the Add Line button was clicked
            let addLineClicked = false;

            // Add event listener to the Add Line button
            addLineBtn.addEventListener('click', () => {
                addLineClicked = true;
            });

            if (!addLineClicked) {
                alert("please add order entry!")
                return;
            }

</script>

